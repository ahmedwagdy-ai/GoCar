{"level":"error","message":"Error registering Driver: Driver validation failed: email: Path `email` is required.","timestamp":"2025-06-17T21:27:28.410Z"}
{"level":"error","message":"Error getting Driver by ID: Cannot access 'Driver' before initialization","timestamp":"2025-06-17T21:28:49.053Z"}
{"level":"error","message":"Error getting Driver by ID: Cannot access 'Driver' before initialization","timestamp":"2025-06-17T21:28:52.246Z"}
{"level":"error","message":"Error getting Driver by ID: Cannot access 'Driver' before initialization","timestamp":"2025-06-17T21:28:53.164Z"}
{"level":"error","message":"Error getting Driver by ID: Cannot access 'Driver' before initialization","timestamp":"2025-06-17T21:28:54.149Z"}
{"level":"error","message":"Error getting Driver by ID: Cannot access 'Driver' before initialization","timestamp":"2025-06-17T21:29:00.635Z"}
{"level":"error","message":"Error getting Driver by ID: Cannot access 'Driver' before initialization","timestamp":"2025-06-17T21:29:02.007Z"}
{"level":"error","message":"Error getting Driver by ID: Cannot access 'Driver' before initialization","timestamp":"2025-06-17T21:29:03.363Z"}
{"level":"error","message":"Error getting Driver by ID: Cannot access 'Driver' before initialization","timestamp":"2025-06-17T21:29:04.407Z"}
{"level":"error","message":"Error getting Driver by ID: Cannot access 'Driver' before initialization","timestamp":"2025-06-17T21:29:05.265Z"}
{"level":"error","message":"Error getting Driver by ID: Cannot access 'Driver' before initialization","timestamp":"2025-06-17T21:29:06.338Z"}
{"level":"error","message":"Error deleting Driver: Cast to ObjectId failed for value \"68498d2783e1504989bcb408f\" (type string) at path \"_id\" for model \"Driver\"","timestamp":"2025-06-17T21:31:57.423Z"}
{"level":"error","message":"Error deleting Driver: Cast to ObjectId failed for value \"68498d2783e1504989bcb40\" (type string) at path \"_id\" for model \"Driver\"","timestamp":"2025-06-17T21:32:04.502Z"}
{"level":"error","message":"Error getting Client by ID: Cannot access 'Client' before initialization","timestamp":"2025-06-17T21:39:52.159Z"}
{"level":"error","message":"Error getting all DriverShifts: Cannot populate path `client` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-06-17T21:52:09.654Z"}
{"level":"error","message":"Error ending DriverShift: DriverShift validation failed: status: `inactive` is not a valid enum value for path `status`.","timestamp":"2025-06-17T21:54:59.595Z"}
{"level":"error","message":"Error getting DriverShift by ID: Cannot populate path `client` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-06-17T21:56:11.988Z"}
{"_message":"trip validation failed","errors":{"carType":{"kind":"required","message":"Path `carType` is required.","name":"ValidatorError","path":"carType","properties":{"message":"Path `carType` is required.","path":"carType","type":"required"}}},"level":"error","message":"Error requesting trip: trip validation failed: carType: Path `carType` is required.","stack":"ValidationError: trip validation failed: carType: Path `carType` is required.\n    at Document.invalidate (C:\\Users\\AHMAD\\Desktop\\GoCar\\node_modules\\mongoose\\lib\\document.js:3343:32)\n    at C:\\Users\\AHMAD\\Desktop\\GoCar\\node_modules\\mongoose\\lib\\document.js:3104:17\n    at C:\\Users\\AHMAD\\Desktop\\GoCar\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)","timestamp":"2025-06-18T00:09:54.350Z"}
{"level":"error","message":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.j6ercng.mongodb.net","timestamp":"2025-06-18T10:10:32.868Z"}
{"level":"error","message":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.j6ercng.mongodb.net","timestamp":"2025-06-18T10:10:44.690Z"}
{"level":"error","message":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.j6ercng.mongodb.net","timestamp":"2025-06-18T10:11:37.706Z"}
{"_message":"trip validation failed","errors":{"carType":{"kind":"required","message":"Path `carType` is required.","name":"ValidatorError","path":"carType","properties":{"message":"Path `carType` is required.","path":"carType","type":"required"}}},"level":"error","message":"Error requesting trip: trip validation failed: carType: Path `carType` is required.","stack":"ValidationError: trip validation failed: carType: Path `carType` is required.\n    at Document.invalidate (C:\\Users\\AHMAD\\Desktop\\GoCar\\node_modules\\mongoose\\lib\\document.js:3343:32)\n    at C:\\Users\\AHMAD\\Desktop\\GoCar\\node_modules\\mongoose\\lib\\document.js:3104:17\n    at C:\\Users\\AHMAD\\Desktop\\GoCar\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)","timestamp":"2025-06-18T10:12:38.374Z"}
{"level":"error","message":"Error getting trips: Cannot populate path `driverShift` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-06-18T10:14:54.037Z"}
{"level":"error","message":"Error getting trips: Operation `trips.find()` buffering timed out after 10000ms","timestamp":"2025-06-18T10:16:13.116Z"}
{"level":"error","message":"Error getting trips: Operation `trips.find()` buffering timed out after 10000ms","timestamp":"2025-06-18T10:16:28.750Z"}
{"level":"error","message":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.j6ercng.mongodb.net","timestamp":"2025-06-18T10:17:34.236Z"}
{"level":"error","message":"Error getting all DriverShifts: Cannot populate path `Trip` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-06-18T11:04:39.298Z"}
{"level":"error","message":"Error getting all DriverShifts: Schema hasn't been registered for model \"Trip\".\nUse mongoose.model(name, schema)","timestamp":"2025-06-18T11:05:59.562Z"}
{"level":"error","message":"Error getting all DriverShifts: Cannot populate path `Trips` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-06-18T11:06:15.819Z"}
{"level":"error","message":"Error getting all DriverShifts: Schema hasn't been registered for model \"Trip\".\nUse mongoose.model(name, schema)","timestamp":"2025-06-18T11:06:31.700Z"}
{"level":"error","message":"Error getting all DriverShifts: Schema hasn't been registered for model \"Trip\".\nUse mongoose.model(name, schema)","timestamp":"2025-06-18T11:06:53.187Z"}
{"level":"error","message":"Error getting all DriverShifts: Schema hasn't been registered for model \"Trip\".\nUse mongoose.model(name, schema)","timestamp":"2025-06-18T11:06:54.887Z"}
{"level":"error","message":"Error getting all DriverShifts: Schema hasn't been registered for model \"Trip\".\nUse mongoose.model(name, schema)","timestamp":"2025-06-18T11:06:56.105Z"}
{"level":"error","message":"Error accepting trip: Cannot read properties of null (reading 'status')","timestamp":"2025-06-18T11:21:10.234Z"}
{"level":"error","message":"Error rating passenger: Cannot destructure property 'rating' of 'req.body' as it is undefined.","timestamp":"2025-06-18T13:03:53.825Z"}
